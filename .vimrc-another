"Get out of VI's compatible mode
set nocompatible
set nofoldenable    " disable folding

"Encoding
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,gbk,chinese,cp936,gb18030,utf-16le,utf-16,big5,euc-jp,euc-kr,latin-1

"Update time
set updatetime=300

"I like using light background terminal
set background=light

"Sets how many lines of history VIM has to remember
set history=1000

"Set to auto read when a file is changed from the outside
set autoread

"Keep buffer during switch files
set hidden

"No fold
set nofoldenable

"Always show current position
set ruler

"Show line number and wrap line
set number
set wrap

"Backspace and cursor keys wrap to
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

"show matching bracets
set showmatch

"Text options
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set smarttab

"Auto-complete filename command mode
set wildmode=list:longest,full

"Highlight search things
set hlsearch
set incsearch

"viminfo file
"set viminfo+=n~/.vim/.viminfo

"swapfile dir
set directory=/tmp//

"noswapfile
"setlocal noswapfile

"Enable filetype
filetype plugin indent on

"Enable syntax hl
syntax enable

"Highlight trailing spaces/tabs
match ErrorMsg '\s\+$'

"Highlight settings in Visual select and Diff mode
highlight Search ctermfg=DarkBlue
highlight Visual ctermfg=White ctermbg=LightBlue
highlight DiffAdd    cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffDelete cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffChange cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffText   cterm=bold ctermfg=10 ctermbg=88 gui=none guifg=bg guibg=Red
"highlight Comment ctermfg=Blue

"Don't like q:
map q <Nop>

"When highlight words, don't jump to next
nnoremap * :let @/='\<<C-R>=expand("<cword>")<CR>\>'<CR>:set hls<CR>
nnoremap <silent> <C-l> :nohls<CR><C-l>

"Map :Q to :q, :W to :w
cnoreabbrev Q <C-r>=(getcmdtype()==':'? 'q!' : 'Q')<CR>
cnoreabbrev W <C-r>=(getcmdtype()==':'? 'w' : 'W')<CR>
cnoreabbrev Wq <C-r>=(getcmdtype()==':'? 'wq' : 'Wq')<CR>
cnoreabbrev WQ <C-r>=(getcmdtype()==':'? 'wq' : 'WQ')<CR>

"Map VIM command/insert mode shortcut to bash shortcut
cnoremap <C-a> <Home>
cnoremap <C-e> <End>
cnoremap <C-b> <Left>
cnoremap <C-f> <Right>
cnoremap <C-d> <Del>
cnoremap <C-k> <Nop>
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-k> <Up>
inoremap <C-j> <Down>
inoremap <C-b> <Left>
inoremap <C-f> <Right>
inoremap <C-d> <Del>
inoremap <C-c> <ESC>
inoremap <C-z> <ESC><C-z>

noremap <Leader>W :w !sudo tee % > /dev/null

"autocmd settings
if !exists("autocommands_loaded")
    let autocommands_loaded = 1

    "Strip trailing withspace
    fun! StripTrailingWhitespace()
        let l = line(".")
        let c = col(".")
        " if &ft =~ 'mkd'
        "     return
        " endif
        %s/\s\+$//e
        call cursor(l, c)
    endfun
    autocmd BufWritePre * call StripTrailingWhitespace()
endif

"FileType
autocmd FileType go setlocal noexpandtab
autocmd FileType html,javascript,css,json,jsonc,yaml setlocal shiftwidth=2 tabstop=2 softtabstop=2

"vim-plug setting
fun! VimPlug()
    call plug#begin('~/.vim/bundle')
        Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'}
        Plug 'plasticboy/vim-markdown'
        Plug 'rust-lang/rust.vim'
        Plug 'vim-airline/vim-airline'
    call plug#end()
endfun
silent! call VimPlug()

"nerdtree plugin
nmap <F8> :NERDTreeToggle<CR>

" tab navigation mappings
nnoremap tn  :tabnext<CR>
nnoremap tp  :tabprev<CR>
nnoremap tt  :tabedit<Space>
nnoremap tm  :tabm<Space>
nnoremap tq  :tabclose<CR>
nnoremap t1 1gt
nnoremap t2 2gt
nnoremap t3 3gt
nnoremap t4 4gt
nnoremap t5 5gt
nnoremap t6 6gt
nnoremap t7 7gt
nnoremap t8 8gt
nnoremap t9 9gt
